apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: covertype-training-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.4.0, pipelines.kubeflow.org/pipeline_compilation_time: '2021-04-08T02:41:00.027306',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Constructs a Kubeflow
      pipeline.", "inputs": [{"default": "gs://jk-ucaip-demos/covertype/pipeline_root",
      "name": "pipeline-root"}, {"default": "gs://workshop-datasets/covertype/small",
      "name": "data-root-uri"}, {"default": "eval", "name": "eval-split-name"}], "name":
      "covertype-training"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.4.0}
spec:
  entrypoint: covertype-training
  templates:
  - name: covertype-training
    inputs:
      parameters:
      - {name: data-root-uri}
      - {name: eval-split-name}
      - {name: pipeline-root}
    dag:
      tasks:
      - name: csvexamplegen
        template: csvexamplegen
        arguments:
          parameters:
          - {name: data-root-uri, value: '{{inputs.parameters.data-root-uri}}'}
          - {name: eval-split-name, value: '{{inputs.parameters.eval-split-name}}'}
          - {name: pipeline-root, value: '{{inputs.parameters.pipeline-root}}'}
  - name: csvexamplegen
    container:
      args:
      - --pipeline_name
      - covertype-training
      - --pipeline_root
      - '{{inputs.parameters.pipeline-root}}'
      - --kubeflow_metadata_config
      - |-
        {
          "grpc_config": {
            "grpc_service_host": {
              "environment_variable": "METADATA_GRPC_SERVICE_HOST"
            },
            "grpc_service_port": {
              "environment_variable": "METADATA_GRPC_SERVICE_PORT"
            }
          }
        }
      - --beam_pipeline_args
      - '["--direct_running_mode=multi_processing", "--direct_num_workers=0"]'
      - --additional_pipeline_args
      - '{}'
      - --component_launcher_class_path
      - tfx.orchestration.launcher.in_process_component_launcher.InProcessComponentLauncher
      - --serialized_component
      - '{"__class__": "NodeWrapper", "__module__": "tfx.orchestration.kubeflow.node_wrapper",
        "__tfx_object_type__": "jsonable", "_exec_properties": {"custom_config": null,
        "input_base": "{{inputs.parameters.data-root-uri}}", "input_config": "{\n  \"splits\":
        [\n    {\n      \"name\": \"single_split\",\n      \"pattern\": \"*\"\n    }\n  ]\n}",
        "output_config": "{\"split_config\": {\"splits\": [{\"hash_buckets\": 4, \"name\":
        \"train\"}, {\"hash_buckets\": 1, \"name\": \"{{inputs.parameters.eval-split-name}}\"}]}}",
        "output_data_format": 6, "range_config": null}, "_id": "CsvExampleGen", "_inputs":
        {"__class__": "_PropertyDictWrapper", "__module__": "tfx.types.node_common",
        "__tfx_object_type__": "jsonable", "_compat_aliases": {}, "_data": {}}, "_outputs":
        {"__class__": "_PropertyDictWrapper", "__module__": "tfx.types.node_common",
        "__tfx_object_type__": "jsonable", "_compat_aliases": {}, "_data": {"examples":
        {"__class__": "Channel", "__module__": "tfx.types.channel", "__tfx_object_type__":
        "jsonable", "additional_custom_properties": {}, "additional_properties": {},
        "artifacts": [], "output_key": "examples", "producer_component_id": "CsvExampleGen",
        "type": {"name": "Examples", "properties": {"span": "INT", "split_names":
        "STRING", "version": "INT"}}}}}, "_type": "tfx.components.example_gen.csv_example_gen.component.CsvExampleGen",
        "driver_class": {"__class__": "Driver", "__module__": "tfx.components.example_gen.driver",
        "__tfx_object_type__": "class"}, "executor_spec": {"__class__": "ExecutorClassSpec",
        "__module__": "tfx.dsl.components.base.executor_spec", "__tfx_object_type__":
        "jsonable", "executor_class": {"__class__": "Executor", "__module__": "tfx.components.example_gen.csv_example_gen.executor",
        "__tfx_object_type__": "class"}, "extra_flags": ["--direct_running_mode=multi_processing",
        "--direct_num_workers=0"]}}'
      - --component_config
      - 'null'
      command: [python, -m, tfx.orchestration.kubeflow.container_entrypoint]
      env:
      - name: WORKFLOW_ID
        valueFrom:
          fieldRef: {fieldPath: 'metadata.labels[''workflows.argoproj.io/workflow'']'}
      - name: KFP_POD_NAME
        valueFrom:
          fieldRef: {fieldPath: metadata.name}
      - name: KFP_NAMESPACE
        valueFrom:
          fieldRef: {fieldPath: metadata.namespace}
      envFrom:
      - configMapRef: {name: metadata-grpc-configmap, optional: true}
      image: tensorflow/tfx:0.28.0
    inputs:
      parameters:
      - {name: data-root-uri}
      - {name: eval-split-name}
      - {name: pipeline-root}
    outputs:
      artifacts:
      - {name: mlpipeline-ui-metadata, path: /mlpipeline-ui-metadata.json}
    metadata:
      labels:
        add-pod-env: "true"
        pipelines.kubeflow.org/pipeline-sdk-type: tfx
  arguments:
    parameters:
    - {name: pipeline-root, value: 'gs://jk-ucaip-demos/covertype/pipeline_root'}
    - {name: data-root-uri, value: 'gs://workshop-datasets/covertype/small'}
    - {name: eval-split-name, value: eval}
  serviceAccountName: pipeline-runner
